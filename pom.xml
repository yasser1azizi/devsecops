<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.devsecops</groupId>
	<artifactId>numeric</artifactId>
	<version>0.0.1</version>
	<name>numeric</name>
	<description>Demo for DevSecOps</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version> <!-- Use the latest version where possible -->
				<executions>
				<execution>
					<id>prepare-agent</id>
					<goals>
					<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>report</id>
					<phase>test</phase>
					<goals>
					<goal>report</goal>
					</goals>
				</execution>
				</executions>
			</plugin>
		
				<!-- JaCoCo plugin configuration -->
				<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.5</version>
						<executions>
								<!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as a VM argument when Maven the Surefire plugin is executed. -->
								<execution>
										<id>prepare-agent</id>
										<goals>
												<goal>prepare-agent</goal>
										</goals>
								</execution>
								<!-- Ensures that the code coverage report for unit tests is created after tests have been run. -->
								<execution>
										<id>report</id>
										<phase>test</phase>
										<goals>
												<goal>report</goal>
										</goals>
								</execution>
								<!-- Example execution to enforce certain coverage checks during build. Uncomment and modify thresholds as necessary.
								<execution>
										<id>check</id>
										<goals>
												<goal>check</goal>
										</goals>
										<configuration>
												<rules>
														<rule>
																<element>BUNDLE</element>
																<limits>
																		<limit>
																				<counter>LINE</counter>
																				<value>COVEREDRATIO</value>
																				<minimum>0.80</minimum>
																		</limit>
																</limits>
														</rule>
												</rules>
										</configuration>
								</execution>
								-->
						</executions>
						<configuration>
								<!-- Configuration for the report goal -->
								<outputDirectory>${project.build.directory}/jacoco-reports</outputDirectory>
								<dataFile>${project.build.directory}/jacoco.exec</dataFile>
						</configuration>
				</plugin>
				

				
<plugin>
	<groupId>org.pitest</groupId>
	<artifactId>pitest-maven</artifactId>
	<version>1.5.0</version>
	<dependencies>
		<dependency>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-junit5-plugin</artifactId>
			<version>0.12</version>
		</dependency>
	</dependencies>
	<configuration>
		<mutationThreshold>70</mutationThreshold>
		<outputFormats>
			<outputFormat>HTML</outputFormat>
			<outputFormat>XML</outputFormat>
		</outputFormats>
	</configuration>
</plugin>

			
		</plugins>
	</build>

</project>
